# pré-requis

## conf mail (smtp)

Autoriser l'utilisation du port 587 en sortie du serveur::

    /etc/init.d/firewall.sh

- trouver la bonne ligne et l'éditer::

    REMOTE_TCP_SERVICES="22 25 80 443 587" # web browsing

- relancer le firewall::

    /etc/init.d/firewall.sh restart

Lister la conf actuelle::

    postconf -n
        alias_database = hash:/etc/aliases
        alias_maps = hash:/etc/aliases
        append_dot_mydomain = no
        biff = no
        config_directory = /etc/postfix
        inet_interfaces = all
        inet_protocols = ipv4
        mailbox_command = procmail -a "$EXTENSION"
        mailbox_size_limit = 0
        mydestination = www.emindhub.com, localhost.localdomain, localhost
        mydomain = www.emindhub.com
        myhostname = www.emindhub.com
        mynetworks = 127.0.0.0/8
        myorigin = /etc/mailname
        readme_directory = no
        recipient_delimiter = +
        relayhost =
        smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache
        smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
        smtpd_tls_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem
        smtpd_tls_key_file = /etc/ssl/private/ssl-cert-snakeoil.key
        smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
        smtpd_use_tls = yes

Edition de la conf en relay vers OVH::

    postconf -e "mydestination = "
    # smtp.emindhub.com est un alias DNS de ssl0.ovh.net
    postconf -e "relayhost=[smtp.emindhub.com]:587"
    postconf -e "smtp_sasl_auth_enable   = yes"
    postconf -e "smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd"
    postconf -e "smtp_sasl_security_options = noanonymous"

On vérifie ces éditions::

    postconf -n
        alias_database = hash:/etc/aliases
        alias_maps = hash:/etc/aliases
        append_dot_mydomain = no
        biff = no
        config_directory = /etc/postfix
        inet_interfaces = all
        inet_protocols = ipv4
        mailbox_command = procmail -a "$EXTENSION"
        mailbox_size_limit = 0
        mydestination =
        mydomain = www.emindhub.com
        myhostname = www.emindhub.com
        mynetworks = 127.0.0.0/8
        myorigin = /etc/mailname
        readme_directory = no
        recipient_delimiter = +
        relayhost = [smtp.emindhub.com]:587
        smtp_sasl_auth_enable = yes
        smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
        smtp_sasl_security_options = noanonymous
        smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache
        smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
        smtpd_tls_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem
        smtpd_tls_key_file = /etc/ssl/private/ssl-cert-snakeoil.key
        smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
        smtpd_use_tls = yes

On mets le bon user/password dans le fichier::

    echo "[smtp.emindhub.com]:587 contact@emindhub.com:ICILEPASSWORD" > /etc/postfix/sasl_passwd

On hash ce fichier::

    postmap /etc/postfix/sasl_passwd

On relance postfix::

    service postfix restart && tail -f /var/log/mail.log

## drush

Un fichier `/root/.drush/emindhub.aliases.drushrc.php` avec quelque chose comme:

    <?php
    $aliases['prodv2'] = array(
        'uri' => 'prod.www.emindhub.com/',
        'root' => '/var/www/www.emindhub.com/www',
    );
    $aliases['preprod'] = array(
        'uri' => 'preprod.emindhub.com',
        'root' => '/var/www/preprod.emindhub.com/www',
    );
    $aliases['clone'] = array(
        'uri' => 'clone.emindhub.com/',
        'root' => '/var/www/clone.emindhub.com/www',
    );
    $aliases['dev'] = array(
        'uri' => 'dev.emindhub.com',
        'root' => '/var/www/dev.emindhub.com/www',
    );


Pour tous les sites apaches qui utilisent un mot de passe, il faut **absolument** que le fichier `/var/www/.htpasswd` existe.

Pour apache voici les modules actifs (shared):
 * auth_basic_module
 * authn_file_module
 * authz_default_module
 * authz_groupfile_module
 * authz_host_module
 * authz_user_module
 * autoindex_module
 * cgi_module
 * deflate_module
 * dir_module
 * env_module
 * expires_module
 * headers_module
 * mime_module
 * negotiation_module
 * php5_module
 * reqtimeout_module
 * rewrite_module
 * setenvif_module
 * ssl_module
 * status_module

# deployer la prod

## 1 cloner la prod actuelle vers son clone (serveur soyou)

Le programme va se charger de faire une copie du code de prod dans un dossier `/var/ww/clone.emindhub.com`
et installer ce qu'il faut pour que ce site fonctionne. Il sert ensuite de base aux autres créations de sites (preprod/dev/ mais aussi prod quand on fait des mises à jour)

La commande est à taper depuis le vps: 

    # creation clone
    deploy/soyou_clone.sh

## 1-bis passer la prod en maintenance

On peut le faire. C'est mieux.

## 2 tester ce clone sur la preprod

### Configuration

Le fichier de configuration de l'envirronement ciblé est `deploy/preprod.emindhub.com`
Veillez, dans l'idéal, à avoir une version concordante de ce fichier dans la branche git déployée.
la branche git à déployer est définie dans ce fichier (entre autres).

### Commande

La preprod doit se monter sur le même serveur que le clone

La commande est à taper depuis le vps:

    cd /var/www/dev-emindhub-security
    deploy/soyou_preprod.sh

## 3 passer ce clone en prod

### Configuration

Le fichier de configuration de l'envirronement ciblé est `deploy/www.emindhub.com`
Veillez, dans l'idéal, à avoir une version concordante de ce fichier dans la branche git déployée.
la branche git à déployer est définie dans ce fichier (entre autres).

Vérifiez aussi la présence des tags drush sur le serveur ciblé (soyou) au niveau du fichier `/root/.drush/emindhub.aliases.drushrc.php`

### Commande

La prod doit se monter sur le même serveur que le clone

La commande est à taper depuis le vps:

    cd /var/www/dev-emindhub-security
    deploy/soyou_prod.sh

## 3-bis enlever le mode maintenance

Si vous l'aviez mis.

# Certificats SSL / HTTPS

## générer le certificat

Il faut installer letsencrypt.

Sur Soyoustart letsencrypt est dans `/home/yoann/letsencrypt/` (`/root` sur le VPS).

Pour générer un certificat, nous n'utiliserons pas le plugin Apache:
 * car il ne fonctionne qu'avec la version 2.4 (et pas 2.2)
 * car il ne fonctionne pas très bien, en fait, et que l'on a ce qu'il faut dans templates/apache2 pour avoir l'équivalent

Il faut cependant utiliser letsencrypt pour générer les certificats, et pour que cela fonctionne, il faut que le site existe d'abord en HTTP, publiquement accessible.

Quand le site fonctionne en HTTP, on lance cette commande (sur le serveur syoustart):

    # sur soyou pour la prod
    /home/yoann/letsencrypt/letsencrypt-auto certonly --webroot -w /var/www/www.emindhub.com/www -d www.emindhub.com
    # sur le vps pour piwik
    /root/.local/share/letsencrypt/bin/letsencrypt certonly --webroot -w /var/www/piwik/ -d piwik.emindhub.com

Celle-ci va créer un certificat et quelques autres fichiers dans le dossier `/etc/letsencrypt/live/www.emindhub.com`.

## Générer le virtualhost Apache pour le SSL

Pour piwik on fais le VH à la main. Pour la prod on va indiquer qu'on veut du SSL et nos programes vont générer:
 * un virtualhost de redirection vers le https sur le port 80 pour ce domaine
 * un virtualhost ssl avec les bonnes infos sur le port 443

**Attention**, essayez de n'avoir qu'un seul site en HTTPS par serveur.

Il faut éditer le fichier de conf du domaine: `deploy/www.emindhub.com.conf`.
Dedans on s'assure que l'on a:

    PORT=443
    SSL=1

On commit ce changement (si besoin, voir aussi la gestion des branches).
Puis on lance la commande de redéploiement. Il n'est pas nécessaire de tout refaire (notamment, pas nécessaire de reprendr ela base clonée.
Il faut au moins:

 * refaire la conf Apache
 * refaire les settings Drupal (changement de base_url)
 *vider les caches

## TODO: renew certificate

 * regarder la cvommande pour renouveller un certificat.
 * regarder la date de validité du certificat généré / peut-être ajouter une sonde de monitoring pour penser à la renouveller


