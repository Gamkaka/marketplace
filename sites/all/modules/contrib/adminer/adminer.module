<?php

/**
 * @file
 * Provide database management using Adminer.
 */

/**
 * Helper functions.
 */
module_load_include('inc', 'adminer', 'adminer.functions');

/**
 * Implements hook_help().
 */
function adminer_help($path, $arg) {
  switch ($path) {
    case 'admin/help#adminer':
      // Return a line-break version of the module README.txt
      return _filter_autop(file_get_contents( dirname(__FILE__) . "/README.txt"));
      break;
  }
}

/**
 * Implements hook_permission().
 */
function adminer_permission() {
  return array(
    'use adminer' =>  array(
      'title' => t('Use adminer'),
      'restrict access' => TRUE,
    ),
    'use adminer without login' =>  array(
      'title' => t('Use adminer without login'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function adminer_menu() {
  $items['admin/config/development/adminer'] = array(
    'title' => 'Adminer',
    'page callback' => 'adminer_main_page',
    'access arguments' => array('use adminer'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/development/adminer/adminer'] = array(
    'title' => 'Adminer',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/development/adminer/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('adminer_settings_form'),
    'access arguments' => array('use adminer'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/development/adminer/callback'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'adminer_get_adminer',
    'access arguments' => array('use adminer'),
  );
  return $items;
}

/**
 * Returns settings form.
 */
function adminer_settings_form() {
  $adminers = adminer_get_all_php();
  if (empty($adminers)) {
    $form['adminer_php'] = array(
      '#type' => 'item',
      '#title' => t('Adminer version'),
      '#markup' => t('Not installed') . ' (' . l(t('Download'), 'http://www.adminer.org/latest.php', array('attributes' => array('target' => '_blank'))) . ')',
      '#description' => t('Please download <b>adminer-x.x.x.php</b> to <b>!adminer_dir</b>', array('!adminer_dir' => drupal_get_path('module', 'adminer') . '/adminer/')),
    );
  }
  else {
    $form['adminer_php'] = array(
      '#type' => 'select',
      '#title' => t('Adminer version'),
      '#default_value' => adminer_get_php(),
      '#options' => $adminers,
    );
  }

  $styles = adminer_get_all_css();
  if (empty($styles)) {
    $form['adminer_css'] = array(
      '#type' => 'item',
      '#title' => t('Adminer style'),
      '#markup' => t('Not installed') . ' (' . l(t('Download'), 'http://www.adminer.org/#extras', array('attributes' => array('target' => '_blank'))) . ')',
      '#description' => t('Please download styles to <b>!styles_dir</b> (you can rename css files)', array('!styles_dir' => drupal_get_path('module', 'adminer') . '/adminer/styles/')),
    );
  }
  else {
    $form['adminer_css'] = array(
      '#type' => 'select',
      '#title' => t('Adminer style'),
      '#default_value' => adminer_get_css(),
      '#options' => $styles,
    );
  }

  $header = array(
    'plugin' => t('Plugin'),
    'description' => t('Description'),
    'required' => t('Required'),
    'installed' => t('Installed'),
  );
  $rows = array();
  $all_plugins = adminer_get_all_plugins();
  $plugins = adminer_get_plugins();
  foreach ($all_plugins as $name => $plugin) {
    $rows[$name] = array(
      'plugin' => '<b>' . check_plain($name) . '</b>',
      'description' => check_plain($plugin['description']),
      'required' => (isset($plugin['required']) && $plugin['required']) ? t('Required') : t('Optional'),
      'installed' => t('Installed'),
    );
    if (!isset($plugins[$name])) {
      $rows[$name]['installed'] = t('No');
      if (isset($plugin['url'])) {
        $rows[$name]['installed'] .= ' (' . l(t('Download'), $plugin['url'], array('attributes' => array('target' => '_blank'))) . ')';
      }
    }
  }
  $form['adminer_plugins'] = array(
    '#type' => 'item',
    '#markup' => theme('table', array(
      'header' => $header,
      'rows' => $rows,
    )),
    '#title' => t('Plugins'),
    '#description' => t('Please download plugins to <b>!plugins_dir</b>', array('!plugins_dir' => drupal_get_path('module', 'adminer') . '/adminer/plugins/')),
  );

  return system_settings_form($form);
}

/**
 * Returns main Adminer page.
 */
function adminer_main_page() {
  if (!adminer_check_components()) {
    return '';
  }
  $attrs = array();
  if (user_access('use adminer without login')) {
    $db = Database::getConnectionInfo();
    $attrs['query'] = array(
      'username' => '',
      'db' => $db['default']['database'],
    );
  }
  // TODO: Что-то тут нечисто :)
  return theme('adminer', array('src' => url('admin/config/development/adminer/callback', $attrs)));
}

/**
 * Function to initialize Adminer.
 */
function adminer_object() {
  $all_plugins = adminer_get_all_plugins();
  $plugins = adminer_get_plugins();
  $params = array();
  foreach ($plugins as $plugin) {
    include_once $all_plugins[$plugin]['path'];
    if (isset($all_plugins[$plugin]['class']) && $all_plugins[$plugin]['class']) {
      $params[] = new $all_plugins[$plugin]['class']();
    }
  }
  return new AdminerPlugin($params);
}

/**
 * Page callback for Adminer iframe.
 */
function adminer_get_adminer() {
  include DRUPAL_ROOT . '/' . adminer_get_php();
  drupal_exit();
}

/**
 * Implements hook_theme().
 */
function adminer_theme($existing, $type, $theme, $path) {
  return array(
    'adminer' => array(
      'variables' => array(
        'src' => NULL,
        'text' => t('Your browser does not support embedded frames.'),
      ),
      'template' => 'adminer',
    ),
  );
}
