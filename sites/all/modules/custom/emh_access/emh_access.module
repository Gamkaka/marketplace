<?php
/**
* @file
* Code for eMindHub access feature.
*/

function emh_access_author_name($node) {

  $access = FALSE;

  // Check node options
  // 0|Display my full name
  // 1|Hide my full name
  $anonymous_mode = field_get_items('node', $node, 'field_anonymous');
  if ($anonymous_mode[0]['value'] == 0) {
    $access = TRUE;
  }

  return $access;
}

function emh_access_author_company($node) {

  $access = FALSE;

  // Check node options
  // 0|Display the name
  // 1|Hide the name
  $show_entreprise = field_get_items('node', $node, 'field_show_entreprise');
  if ($show_entreprise[0]['value'] == 0) {
    $access = TRUE;
  }

  return $access;
}

/**
 * Implements hook_field_access.
 */
function emh_access_field_access($op, $field, $entity_type, $entity, $account) {

  if ($op == 'view') {

    if (empty($entity)) return TRUE;
    if (empty($account)) {
      global $user;
      $account = $user;
    }
    if ($account->uid == $entity->uid) return TRUE;

    switch ($entity_type) {

      case 'user':
        switch($field['field_name']) {
          // We can always access first, last names and photo.
          case 'field_first_name':
            return TRUE;
            break;
          case 'field_last_name':
            return TRUE;
            break;
          case 'field_photo':
            return TRUE;
            break;
          case 'field_titre_metier':
            return TRUE;
            break;
          case 'field_employment_history':
            return TRUE;
            break;
          case 'field_sponsor_why':
            return TRUE;
            break;
          case 'field_partner_why':
            return TRUE;
            break;
          // For other fields, it depends of our relation with the user:
          case 'field_address':
            $flag = flag_get_flag('my_contacts');
            return ($flag && $flag->is_flagged($entity->uid, $account->uid));
            break;
          case 'field_telephone':
            $flag = flag_get_flag('my_contacts');
            return ($flag && $flag->is_flagged($entity->uid, $account->uid));
            break;
          default:
            return emh_access_user_can_see_full_user($account->uid, $entity->uid);
            break;
        }
        break;

      case 'comment':
        switch($field['field_name']) {
          case 'comment_body':
          return TRUE;
            break;
          default:
            return emh_access_user_can_see_full_answer($account->uid, $entity->uid, $node->uid);
            break;
        }
        break;
      default:
        return TRUE;
        break;
    }

  } else {
    return TRUE;
  }

}

/**
 * Access control : does a user have access to another user profile.
 */
function emh_access_user_can_see_full_user($uid, $uid2) {
  if ($uid == 1) {
    // Admin ( = eMindHub) has every right.
    return TRUE;
  }
  $direct = db_select('emh_points_txn', 'txn')
    ->condition('txn.source_id', $uid)
    ->condition('txn.dest_id', $uid2)
    ->condition('txn.source_type', 'user')
    ->condition('txn.dest_type', 'user');
  $direct->addExpression('COUNT(txn.txn_id)');
  $direct = $direct->execute()
    ->fetchField();
  if ($direct > 0) {
    // There is a direct link.
    return TRUE;
  }
  $indirect = db_select('emh_points_txn', 'txn');
  $indirect->addExpression('COUNT(txn.txn_id)');
  $indirect->innerjoin('node', 'n', 'n.nid = txn.source_id');
  $indirect = $indirect
    ->condition('txn.dest_id', $uid2)
    ->condition('txn.source_type', 'node')
    ->condition('txn.dest_type', 'user')
    ->condition('n.uid', $uid)
    ->execute()
    ->fetchField();
  // Is there a link through a node?
  return ($indirect > 0);
}

/**
 * Access control : does a user have access to another user answer.
 * Current logged-in user : $uid
 * Comment author : $uid2
 * Node author : $uid3
 */
function emh_access_user_can_see_full_answer($uid, $uid2, $uid3) {
  if ($uid == 1) {
    // Admin ( = eMindHub) has every right.
    return TRUE;
  }
  if ($uid == $uid2 || $uid == $uid3) {
    // Node author and comment author have every right.
    return TRUE;
  }
}
