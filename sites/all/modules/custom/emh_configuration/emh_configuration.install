<?php
/**
 * @file
 * Installation hooks for the EMH configuration module.
 */


/**
* Implements hook_enable().
*/
function emh_configuration_enable() {
  emh_configuration_update_7001();
  emh_configuration_update_7002();
  emh_configuration_update_7003();
  emh_configuration_update_7004();
  emh_configuration_update_7005();
  emh_configuration_update_7006();
}

/**
 * Uninstall modules : EMH blocks, forum, poll
 */
function emh_configuration_update_7001() {
  module_disable(array('emh_blocks', 'forum', 'poll'));
  drupal_uninstall_modules(array('emh_blocks', 'forum', 'poll'));
}

/**
 * Delete roles : expert preview, business preview
 */
function emh_configuration_update_7002() {
  user_role_delete('expert preview');
  user_role_delete('business preview');
}

/**
 * Install modules : Autologout, PCP, EMH PCP Special
 */
function emh_configuration_update_7003() {
  module_enable(array('autologout', 'pcp', 'emh_pcp_special'));
}

/**
 * Populate PCP fields parameters
 */
function emh_configuration_update_7004() {
  $value = array(
    'user:user:field_first_name' => 'user:user:field_first_name',
    'user:user:field_last_name' => 'user:user:field_last_name',
    'user:user:field_entreprise' => 'user:user:field_entreprise',
    'user:user:field_telephone' => 'user:user:field_telephone',
    'user:user:field_address' => 'user:user:field_address',
    'user:user:field_titre_metier' => 'user:user:field_titre_metier',
    'user:user:field_working_status' => 'user:user:field_working_status',
    'user:user:field_domaine' => 'user:user:field_domaine',
    'user:user:field_skills_set' => 'user:user:field_skills_set',
    'user:user:field_employment_history' => 'user:user:field_employment_history',
    'user:user:field_notification_frequency' => 'user:user:field_notification_frequency',
    'user:user:field_entreprise_description' => 'user:user:field_entreprise_description',
    'user:user:field_specific_skills3' => 'user:user:field_specific_skills3',
    'user:user:field_photo' => 'user:user:field_photo',
    'user:user:field_position' => 'user:user:field_position',
    'user:user:field_cv' => 'user:user:field_cv',
    'user:user:field_position_list' => 'user:user:field_position_list',
    'user:user:field_needs_for_expertise' => 'user:user:field_needs_for_expertise',
  );
  variable_set('pcp_enabled_fields', $value);
  variable_set('pcp_hide_block_on_complete', '1');
}

/**
 * Delete Search module tables.
 */
function emh_configuration_update_7005() {
  db_delete('search_total')
    ->execute();
  db_delete('search_index')
    ->execute();
}

/**
* Delete old blocks and revert block features.
*/
function emh_configuration_update_7006() {
  $module = 'block';
  $deltas = array('24', '25');
  foreach ($deltas as $delta) {
    db_delete('block')
      ->condition('module', $module)
      ->condition('delta', $delta)
      ->execute();
    db_delete('block_custom')
      ->condition('bid', $delta)
      ->execute();
    db_delete('block_role')
      ->condition('module', $module)
      ->condition('delta', $delta)
      ->execute();
  }
  features_revert(array('ft_blocks' => array('fe_block_boxes')));
}

/**
 * Uninstall module Login Destination + Enable module Language Access.
 */
function emh_configuration_update_7007() {
  module_disable(array('login_destination'));
  drupal_uninstall_modules(array('login_destination'));
  module_enable(array('language_access'));
}

/**
 * Add permissions : Languages access.
 */
function emh_configuration_update_7008() {
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access language en'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access language en'));
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access language fr'));
  user_role_grant_permissions(3, array('access language fr')); // Administrator
  user_role_grant_permissions(6, array('access language fr')); // Webmaster
}

/**
* Delete Forum + Poll nodes and content types.
*/
function emh_configuration_update_7009() {
  $types = array(
    'forum',
    'poll',
  );
  foreach($types as $type) {
    // First, delete nodes
    $results = db_select('node', 'n')
                ->fields('n', array('nid'))
                ->condition('type', $type)
                ->execute();
    foreach ($results as $result) {
      $nids[] = $result->nid;
    }
    if (!empty($nids)) {
      node_delete_multiple($nids);
      drupal_set_message(t('%count nodes has been deleted.', array('%count' => count($nids))));
    }
    // Then, delete content type
    if (node_type_load($type)) {
      node_type_delete($type);
      variable_del('node_preview_' . $type);
      drupal_set_message(t('%type content type has been deleted.', array('%type' => $type)));
    }
  }
  node_types_rebuild();
  menu_rebuild();
}
