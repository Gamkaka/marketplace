<?php
/**
 * @file
 * Installation hooks for the emh_request module.
 */


/**
 * Implements hook_schema().
 */
function emh_request_schema() {
  $schema = array();

  $schema['emh_answer'] = array(
    'description' => '',
    'fields' => array(
      'answer_id' => array(
        'description' => 'Answer ID',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'request_id' => array(
        'description' => 'Request ID (nid)',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ref_entity_type' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The entity type this data is attached to',
      ),
      'ref_entity_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The entity id this data is attached to',
      ),
      'points' => array(
        'description' => 'Current Points',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('answer_id'),
    'indexes' => array(
      'points' => array('points'),
    ),
  );

  return $schema;
}


/**
 * Implements hook_enable().
 */
function emh_request_enable() {
	emh_request_update_7001();

	global $language;
  $lang = $language->language;
  $strings = variable_get("locale_custom_strings_$lang", array());
  foreach (_emh_request_string_overrides() as $string => $override) {
    $strings[''][$string] = $override;
  }
  variable_set("locale_custom_strings_$lang", $strings);

  db_query('TRUNCATE TABLE emh_answer;');

  $comments = db_select('comment', 'c');
  $comments->join('node', 'n', 'n.nid = c.nid');
  $comments = $comments->fields('c', array('cid', 'nid'))
    ->condition('n.type', array('challenge', 'question1'), 'IN')
    ->execute();

  while ($comment = $comments->fetchAssoc()) {
    $answer = new EmhAnswer(array(
      'request_id'      => $comment['nid'],
      'ref_entity_type' => 'comment',
      'ref_entity_id'   => $comment['cid'],
      'points'          => 0,
    ));
    $answer->save();
  }

  $submissions = db_select('webform_submissions', 'ws')
    ->fields('ws', array('sid', 'nid'))
    ->execute();

  while ($submission = $submissions->fetchAssoc()) {
    $answer = new EmhAnswer(array(
      'request_id'      => $submission['nid'],
      'ref_entity_type' => 'webform_submission',
      'ref_entity_id'   => $submission['sid'],
      'points'          => 0,
    ));
    $answer->save();
  }
}


/**
 * Force module weight for hook_form_alter execution
 */
function emh_request_update_7001() {
  db_update('system')
  ->fields(array('weight' => 1))
  ->condition('type', 'module')
  ->condition('name', 'emh_request')
  ->execute();
}

/**
 * Aliases survey creation path.
 */
function emh_request_update_7002() {
  $path = array(
    'source' => 'node/add/webform',
    'alias' => 'node/add/survey',
  );
  path_save($path);
}

/**
 * Implements hook_disable().
 */
function emh_request_disable() {
  global $language;
  $lang = $language->language;
  $strings = variable_get("locale_custom_strings_$lang", array());
  foreach (_emh_request_string_overrides() as $string => $override) {
    unset($strings[''][$string]);
  }
  variable_set("locale_custom_strings_$lang", $strings);
}

/**
 * Provides string overrides.
 */
function _emh_request_string_overrides() {
  return array(
    // Webform submission
    'No Components, add a component below.' => 'No questions, add a question below.',
    'New component name' => 'New question',
    'This will immediately delete the %name component from the %webform webform. This cannot be undone.' => 'This will immediately delete the %name question from the %webform survey. This cannot be undone.',
    'Submission #@serial' => 'Answer #@serial',
    'Submissions for %user' => 'Answers',
    'Edit component: @name' => 'Edit question @name',
    'New component %name added.' => 'New question %name added.',
    'The component positions and required values have been updated.' => 'Your questions have been updated.',

    // Comment
    'Edit comment %comment' => 'Edit answer',
    'Your comment has been queued for review by site administrators and will be published after approval.' => 'Your comment has been saved as a draft.',
  );
}
