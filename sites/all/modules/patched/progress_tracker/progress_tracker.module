<?php

/**
 * Implements hook_theme() .
 */
function progress_tracker_theme() {
  return array(
    'progress_tracker' => array(
      'template' => 'progress-tracker',
      'variables' => array('steps' => null),
    ),
    'progress_tracker_item' => array(
      'template' => 'progress-tracker-item',
      'variables' => array('step_text' => null),
    ),
  );
}

/**
 * Implements hook_block_info() .
 */
function progress_tracker_block_info() {
  $blocks['progress_tracker'] = array(
    'info' => t('Progress Tracker'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure() .
 */
function progress_tracker_block_configure($delta) {
  if ($delta == 'progress_tracker') {
    $form['steps'] = array(
      '#type' => 'textarea',
      '#title' => t('Progress tracker steps'),
      '#default_value' => variable_get('progress_tracker_steps', ''),
      '#description' => t('Enter progress bar steps as "url|step text" e . g <br>cart/checkout|Step 1 Billing & Payment<br>cart/review|Step 2 Review Order<br>cart/confirm|Step 3 Order Confirmation'),
    );
    $form['layout'] = array(
      '#type' => 'radios',
      '#title' => t('Progress Tracker Layout'),
      '#default_value' => variable_get('progress_tracker_layout', 'horizontal'),
      '#description' => t('Select horizontal or vertical layout for progress tracker . '),
      '#options' => array(
        'horizontal' => t('Horizontal'),
        'vertical' => t('Vertical'),
      ),
    );
    return $form;
  }
}

/**
 * Implements hook_block_save() .
 */
function progress_tracker_block_save($delta, $edit) {
  if ($delta == 'progress_tracker') {
    variable_set('progress_tracker_steps', $edit['steps']);
    variable_set('progress_tracker_layout', $edit['layout']);
  }
}

/**
 * Implements hook_block_view() .
 */
function progress_tracker_block_view($delta) {
  switch ($delta) {
    case 'progress_tracker':
    $block = array(
      'subject' => t('Progress Tracker'),
      'content' => _progress_tracker_field(),
    );
    break;
  }
  return $block;
}

function _progress_tracker_field() {
  $steps = variable_get('progress_tracker_steps', '');
  $output = '';
  if ($steps) {
    $steps = explode(chr(13), $steps);
    //add css file
    $path = drupal_get_path('module', 'progress_tracker');
    drupal_add_css($path . '/css/progress_tracker . css');

    $items = array();
    $cur_url = arg();
    if (arg(0) == 'node' && is_numeric(arg(1))) {
      $nid = arg(1);
      if ($nid) {
        $node = node_load($nid);
      } else return '';
    } else return '';
    $wrapper = entity_metadata_wrapper('node', $node);
    $future = false;
    $last_date = 0;

    if (is_array($steps) && count($steps) > 0) {
      foreach ($steps as $step_number => $step) {
        $step_arr = explode('|', $step);
        $field_name = trim($step_arr[0]);
        $field_value = $wrapper->$field_name->value();

        if ($last_date == 0)
          $period = format_date($field_value, 'custom', 'm/d/Y');
        else
          $period = format_date($field_value, 'custom', 'm/d/Y') . ' (' . floor( ($field_value - $last_date)/(60*60*24) ) . ' ' . t('days') . ')';

        $last_date = $field_value;
        $selected_class = array();
        if (intval($field_value) > time()) {
          if (!$future) {
            $selected_class[] = 'selected';
            $future = true;
            $delta = floor( (intval($field_value - time())/(60*60*24)) );
            $period = format_date($field_value, 'custom', 'm/d/Y') . ' (' . $delta . ' ' . t('days remaining') . ')';
          }
        }
        $items[] = array(
          'data' => theme('progress_tracker_item', array('step_text' => $step_arr[1] . ' - ' . $period)),
          'class' => $selected_class,
        );
      }

      if (count($items)) {
        $output = theme('item_list', array('items' => $items, 'title' => null, 'type' => 'ul', 'attributes' => array('class' => array('progress-tracker ' . variable_get('progress_tracker_layout', 'horizontal')))));
      }
    }
  }
  return theme('progress_tracker', array('steps' => $output));
}


function _progress_tracker_path() {
  $steps = variable_get('progress_tracker_steps', '');
  $output = '';
  if ($steps) {
    $steps = explode(chr(13), $steps);

    //add css file
    $path = drupal_get_path('module', 'progress_tracker');
    drupal_add_css($path . '/css/progress_tracker . css');

    $items = array();
    $cur_url = arg();

    if (is_array($steps) && count($steps) > 0) {
      $items[] = array(
        'data' => implode('/', $cur_url),
        'class' => '',
      );
      foreach ($steps as $step_number => $step) {
        $step_arr = explode('|', $step);
        $selected_class = array();
        if (implode('/', $cur_url) == trim($step_arr[0])) {
          $selected_class[] = 'selected';
        }
        $items[] = array(
          'data' => theme('progress_tracker_item', array('step_text' => $step_arr[1])),
          'class' => $selected_class,
        );
      }

      if (count($items)) {
        $output = theme('item_list', array('items' => $items, 'title' => null, 'type' => 'ul', 'attributes' => array('class' => array('progress-tracker ' . variable_get('progress_tracker_layout', 'horizontal')))));
      }
    }
  }
  return theme('progress_tracker', array('steps' => $output));
}
