<?php
 
/*
 * @file
 * Display a Summary of your Drupal Installation.
 */
 
/**
 * Implementation of hook_help()
 */
function summary_help($path, $arg) {
  switch ($path) {
    case 'admin/help#summary':
      return '<p>' . t('Sample module from Atelier Drupal book. This module provide a summary page of your Drupal Installation.') . '</p>';
  }
}

/*
 * Implementation of hook_menu()
 */
function summary_menu() {
  $items['summary'] = array(
    'title' => 'Summary of your site',
    'access arguments' => array(true),
    'type' => MENU_CALLBACK, 
    'page callback' => 'summary_content',
  );
  
  $items['admin/config/system/summary'] = array(
  		'title' => t('Summary settings'),
  		'description' => t('Summary configuration page'),
  		'page callback' => 'drupal_get_form',
  		'page arguments' => array('summary_admin_settings'),
  		'access arguments' => array('administer site configuration'),
  		'type' => MENU_NORMAL_ITEM,
  );
  
  return $items; 
}
 
/*
 * Content of the summary page
 */
function summary_content() {
  //List of all activated modules
  $summary_module_list = module_list();
  //$summary_module_list = t('<h3>' . variable_get('summary_label_module') . '</h3>') . implode($summary_module_list,', ');
	$title = variable_get('summary_label_module');
  $content = implode($summary_module_list,', ');
  $summary_module_list = theme('summary_paragraph', array('title' => $title, 'content' => $content));
  
  // List of vocabularies
  $summary_vocabularies = taxonomy_get_vocabularies();
  $summary_vocabularies_list='';
  foreach ($summary_vocabularies as $vocab){
    $summary_vocabularies_list .= $vocab->name . ',';
  }
  $summary_vocabularies_list = t('<h3>' . variable_get('summary_label_taxonomy') . '</h3>') . $summary_vocabularies_list;
 
  // List of content types
  $summary_node_types = node_type_get_types();
  $summary_node_types_list ='';
  foreach ($summary_node_types as $node_types){
    $summary_node_types_list .= $node_types->name . ',';
  }
  //$summary_node_types_list = t('<h3>' . variable_get('summary_label_content') . '</h3>') . $summary_node_types_list;
  $title = variable_get('summary_label_content',t('Content types'));
  //$content = implode($summary_node_types_list, ', ');
  $content = $summary_node_types_list;
  $summary_node_types_list = theme('summary_paragraph', array('title' => $title, 'content' => $content));
  
  
	$display = variable_get('summary_display',array());
  $output = '';
  if ($display['module']) { $output .= $summary_module_list; }
  if ($display['vocabulary']) { $output .= $summary_vocabularies_list; }
  if ($display['content_type']) { $output .= $summary_node_types_list; }
  
  //Number of nodes
	$query = 'SELECT type, count(*) AS count FROM {node} GROUP BY type';
	//Avec la méthode fetchAssoc
	$result = db_query($query);
	$header = array (t('Node type'), '#');
	while ($row = $result->fetchAssoc()) {
	  $rows[] = $row;
	}
	$table = theme('table', array ('header' => $header, 'rows' => $rows));
	$summary_node_count_type = t('<h3>Number of nodes per type</h3>').$table;
	
	$display = variable_get('summary_display',array()); 
	$output = '';
	if ($display['module'])
	$output .= $summary_module_list ; 
	if ($display['vocabulary']) 
	$output .= $summary_vocabularies_list; 
	if (array_key_exists('content_type',$display) && $display['content_type'])
	$output .= $summary_node_types_list;
	$output .= $summary_node_count_type; 
  
  return $output;
}

/*
 * Define the adminsitration form
 */
function summary_admin_settings(){
	
	$form['checkbox_visible'] = array(
			'#type' => 'fieldset',
			'#title' => t('Section visibility'),
			'#description' => t('Things to show for the summary'),
			'#collapsible' => TRUE,
			'#collapsed' => TRUE,
	);
	
	
  $form['checkbox_visible']['summary_display'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Things to show for the summary'),
    '#description' => t('Check the things to show in the summary page'),
    '#options' => array('module' => t('Module list'), 'vocabulary' => t('Vocabulary list'), 'content_type' => t('Content types')),
    '#default_value' => variable_get('summary_display',array('module', 'vocabulary')),
  );
  
  
  $form['labels'] = array(
  		'#type' => 'fieldset',
  		'#title' => t('Labels of sections'),
  		'#description' => t('Change the labels of the summary'),
  		'#collapsible' => TRUE,
  		'#collapsed' => TRUE,
  );
  
  $form['labels']['summary_label_module'] = array(
  		'#type' => 'textfield',
  		'#title' => t('Label of the module section'),
  		'#description' => t('Change the label of the module section'),
  		'#default_value' => variable_get('summary_label_module',array('Activated modules')),
  );
  
  $form['labels']['summary_label_taxonomy'] = array(
  		'#type' => 'textfield',
  		'#title' => t('Label of the taxonomy section'),
  		'#description' => t('Change the label of the taxonomy section'),
  		'#default_value' => variable_get('summary_label_taxonomy',array('Taxonomy vocabularies')),
  );
  
  $form['labels']['summary_label_content'] = array(
  		'#type' => 'textfield',
  		'#title' => t('Label of the content types section'),
  		'#description' => t('Change the label of the content types section'),
  		'#default_value' => variable_get('summary_label_content',array('Content types')),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_theme
 */
function summary_theme () {
  $functions = array(
    'summary_paragraph' => array (
      'variables' => array('title' => NULL, 'content' => NULL),
      'template' => 'summary_paragraph',
    )
  );
  return $functions;
}

/**
 * Fonction de thème par défaut
 */
function theme_summary_paragraph($variables) {
	$output = '<h4>'.$variables['title'].'</h4>';
	$output .= '<p>'.$variables['content'].'</p>';
	return $output;
}