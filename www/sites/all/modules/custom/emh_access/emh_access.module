<?php
/**
* @file
* Code for eMindHub access feature.
*/

/**
 * Implements hook_permission().
 */
function emh_access_permission() {
  return array(
    'access EMH requests' => array('title' => t('Request: View all published EMH requests')),
    'access EMH answers' => array('title' => t('Answer: View all published EMH answers')),
    'access EMH profiles' => array('title' => t('Profile: View full users profiles')),
  );
}

/**
 * Implements hook_user_presave().
 */
function emh_access_user_presave(&$edit, $account, $category) {
  // Synchronise pseudo-field (to use access hook) with Drupal core field.
  if (!empty($edit['mail'])) {
    $mail = $edit['mail'];
  } else {
    $mail = $account->mail;
  }
  $edit['field_mail'][LANGUAGE_NONE]['0']['value'] = $mail;
}

/**
 * Implements hook_field_access.
 */
function emh_access_field_access($op, $field, $entity_type, $entity, $account) {

  if ($op == 'view') {

    if (empty($entity)) return TRUE;
    if (empty($account)) {
      global $user;
      $account = $user;
    }

    if (isset($entity->uid) && ($account->uid == $entity->uid)) return TRUE;
    if (empty($node)) {
      $nid = arg(1);
      if (arg(0) == 'node' && !empty($nid)) $node = node_load($nid);
    }

    switch ($entity_type) {
      case 'comment':
        switch($field['field_name']) {
          case 'comment_body':
            return TRUE;
            break;
          default:
            return emh_access_user_can_see_full_answer($node->nid, $entity, $account);
            break;
        }
        break;
      default:
        return TRUE;
        break;
    }

  }

  return TRUE;

}

/**
 * Access control : does a user have access to another user profile.
 */
function emh_access_user_can_see_full_user($uid = FALSE, $uid2) {
  if (empty($uid)) {
    global $user;
    $uid = $user->uid;
  }
  $u1_account = user_load($uid);
  $u2_account = user_load($uid2);
  $u1_circlesIDs = og_get_groups_by_user($u1_account, 'node');
  $u2_circlesIDs = og_get_groups_by_user($u2_account, 'node');

  // This is my own profile
  if ($uid == $uid2) return TRUE;

  if (user_access('access EMH profiles')) return TRUE;

  // Organic Groups / EMH Circles
  // User1 is admin/referent of one of User2 circles
  if (!empty($u2_circlesIDs)) {
    if (_emh_circles_check_user_is_adminmember_of_groups($uid, $u2_circlesIDs)) return TRUE;
    if (_emh_circles_check_user_is_admin_of_groups($uid, $u2_circlesIDs)) return TRUE;
    if (_emh_circles_check_user_is_referentmember_of_groups($uid, $u2_circlesIDs)) return TRUE;
  }

  // Organic Groups
  // User1 & User2 belong to the same circle (except 'All experts')
  if (module_exists('og')) {
    unset( $u1_circlesIDs[ '314' ] ); // TODO: manage this differently!
    unset( $u2_circlesIDs[ '314' ] );
    // Check if it's real arrays
    if (!( (array) $u1_circlesIDs !== $u1_circlesIDs ) && !( (array) $u2_circlesIDs !== $u2_circlesIDs ) && array_intersect($u1_circlesIDs, $u2_circlesIDs)) return TRUE;
  }

  // Flags
  if (module_exists('flag')) {
    $flag = flag_get_flag('my_contacts');
    if ($flag && $flag->is_flagged($uid2, $uid)) return TRUE;
  }

  // EMH Virality
  if (module_exists('emh_virality')) {
    emh_virality_user_is_referrer($uid2, $uid);
  }

  // EMH Points
  if (module_exists('emh_points')) {
    $direct = db_select('emh_points_txn', 'txn')
      ->condition('txn.source_id', $uid)
      ->condition('txn.dest_id', $uid2)
      ->condition('txn.source_type', 'user')
      ->condition('txn.dest_type', 'user');
    $direct->addExpression('COUNT(txn.txn_id)');
    $direct = $direct->execute()
      ->fetchField();
    if ($direct > 0) {
      // There is a direct link.
      return TRUE;
    }
    $indirect = db_select('emh_points_txn', 'txn');
    $indirect->addExpression('COUNT(txn.txn_id)');
    $indirect->innerjoin('node', 'n', 'n.nid = txn.source_id');
    $indirect = $indirect
      ->condition('txn.dest_id', $uid2)
      ->condition('txn.source_type', 'node')
      ->condition('txn.dest_type', 'user')
      ->condition('n.uid', $uid)
      ->execute()
      ->fetchField();
    // Is there a link through a node?
    return ($indirect > 0);
  }

  return FALSE;
}

/**
 * Access control : Does a user have access to another user answer?
 */
function emh_access_user_can_see_full_answer($nid, $entity = NULL, $account = NULL) {

  $node = node_load($nid);

  if (empty($account)) {
    global $user;
    $account = $user;
  }

  if (emh_request_has_option($node, 'private')) {

    if (user_access('access EMH answers')) return TRUE;

    // Node author and answer author have every right.
    if ($node->uid == $account->uid) return TRUE;
    if (!empty($entity) && ($entity->uid == $account->uid)) return TRUE;

    if (user_access('administer comments')) return TRUE;
    if (user_access('access all webform results')) return TRUE;

    // Organic Groups / EMH Circles
    // User1 is admin/referent of node's circle
    // TODO: add custom permissions for OG and Comments
    if (isset($node->og_group_ref) && ($circle_items = field_get_items('node', $node, 'og_group_ref'))) {
      $circles = array();

      foreach ($circle_items as $delta => $item) {
        $circles[] = $item['target_id'];
      }

      if (!empty($circles)) {
        if (_emh_circles_check_user_is_adminmember_of_groups($account->uid, $circles)) {
          return TRUE;
        }
        if (_emh_circles_check_user_is_admin_of_groups($account->uid, $circles)) {
          return TRUE;
        }
        if (_emh_circles_check_user_is_referentmember_of_groups($account->uid, $circles)) {
          return TRUE;
        }
        foreach ($circles as $gid) {
          if (og_user_access('node', $gid, 'access all webform results')) {
            return TRUE;
          }
        }
      }

    }

    return FALSE;

  }

  return TRUE;
}

/**
 * Access control : Does a user can post an answer?
 */
function emh_access_user_can_post_answer($nid, $account = NULL) {
  $node = node_load($nid);

  if (empty($account)) {
    global $user;
    $account = $user;
  }

  if (user_access("$node->type: comment on any $node->type content")) {
    return TRUE;
  }

  switch ($node->type) {
    case 'question1':
    case 'challenge':
      return user_access('post comments');
    case 'webform':
    case 'request':
      return user_access('access own webform submissions');
  }

  return FALSE;
}

/**
 * Access control : Does a user have access to full request?
 */
function emh_access_user_can_see_full_request($node = NULL, $account = NULL)  {
  if (empty($account)) {
    global $user;
    $account = $user;
  }

  if (empty($node)) {
    $nid = arg(1);
    $node = node_load($nid);
  }

  if (user_access('access EMH requests')) return TRUE;

  // Node author have every right.
  if ($node->uid == $account->uid) return TRUE;

  // Organic Groups / EMH Circles
  // User1 is admin/referent of node's circle
  if (module_exists('og') && module_exists('emh_circles')) {
    if (isset($node->og_group_ref) && ($circle_items = field_get_items('node', $node, 'og_group_ref'))) {
      $circles = array();

      foreach ($circle_items as $delta => $item) {
        $circles[] = $item['target_id'];
      }

      if (!empty($circles)) {
        if (_emh_circles_check_user_is_adminmember_of_groups($account->uid, $circles)) {
          return TRUE;
        }
        if (_emh_circles_check_user_is_admin_of_groups($account->uid, $circles)) {
          return TRUE;
        }
        if (_emh_circles_check_user_is_referentmember_of_groups($account->uid, $circles)) {
          return TRUE;
        }
      }
    }
  }

  if (module_exists('emh_pcp_special')) {
    $userPercent = emh_pcp_special_get_complete_percentage_data('user', 'user', $account);
    if ($userPercent['current_percent'] == '100') return TRUE;
  }

  return FALSE;
}

function emh_access_author_name($node) {

  global $user;
  if ($user->uid == 1) {
    // Admin ( = eMindHub) has every right.
    return TRUE;
  }

  if (!emh_request_has_option($node, 'anonymous')) {
    return TRUE;
  } else {
    // Check node options
    // 0|Display my full name
    // 1|Hide my full name
    $hide_name = field_get_items('node', $node, 'field_hide_name');
    if ($hide_name[0]['value'] == 0) {
      return TRUE;
    }
  }

  return FALSE;
}

function emh_access_user_organisation($node) {

  global $user;
  if ($user->uid == 1) {
    // Admin ( = eMindHub) has every right.
    return TRUE;
  }

  if (!emh_request_has_option($node, 'anonymous')) {
    return TRUE;
  } else {
    // Check node options
    // 0|Display my organisation
    // 1|Hide my organisation
    $hide_organisation = field_get_items('node', $node, 'field_hide_organisation');
    if ($hide_organisation[0]['value'] == 0) {
      return TRUE;
    }
  }

  return FALSE;
}


/**
 * Access callback for request full access.
 */
function _emh_access_full_access($nid, $account = NULL) {
  if (empty($account)) {
    global $user;
    $account = $user;
  }
  if (empty($nid)) {
    $nid = arg(1);
  }

  if (user_access('access EMH requests')) return TRUE;
  if (user_access('access EMH answers')) return TRUE;
  if (user_access('access EMH profiles')) return TRUE;

  return FALSE;
}
