<?php
/**
 * @file Main hooks implementation for emh_opencalais module.
 */
module_load_include('inc', 'emh_opencalais', 'emh_opencalais');

/**
 * Implements hook_node_prepare().
 */
function emh_opencalais_node_prepare($node) {
  $tags = 'social_tags';
  $content_type = $node->type;
  $auto = variable_get('opencalais_autotagging', array());
  
  if (isset($auto[$content_type])) {
    
    $mode = $auto[$content_type];
    
    // new request
    if (! isset($node->nid)) {
      
      // detect language
      $langue = explode(',', $_SERVER['HTTP_ACCEPT_LANGUAGE']);
      $langue = strtolower(substr($langue[0], 0, 2));
      
      $node->language = $langue;
    }
    
    // not manual mode
    if ($mode > 0) {
      // variable_set('opencalais_autotagging', array($tags, 0));
      $node = emh_opencalais_get_tags($node, $tags);
    }
  }
}
function emh_opencalais_get_suggestions($node, $opencalais_tags) {
  // modify field_request_questions to be used by opencalais
  $node->field_request_questions[$node->language] = $node->field_request_questions['und'];
  
  $suggestions = opencalais_get_suggestions($node, $opencalais_tags);
  return $suggestions;
}

/**
 * Return node with opencalais' tags
 * 
 * @param unknown $node          
 * @param unknown $opencalais_tags          
 * @return node
 */
function emh_opencalais_get_tags($node, $opencalais_tags) {
  $suggestions = emh_opencalais_get_suggestions($node, $opencalais_tags);
  $suggestions = array_keys($suggestions);
  
  foreach ($suggestions as $key => $value) {
    $title = $value;
    $vocab = taxonomy_vocabulary_machine_name_load('tags');
    if (empty($term = taxonomy_get_term_by_name($title, $vocab->machine_name))) {
      // add a new term
      $new_term = (object) array(
          'name' => $title,
          'description' => $title,
          'vid' => $vocab->vid 
      );
      taxonomy_term_save($new_term);
    }
    $tid = array();
    $term = taxonomy_get_term_by_name($title, $vocab->machine_name);
    $key = array_keys($term);
    $tid['tid'] = strval($key[0]);
    
    if (isset($node->field_tags) && ! emh_opencalais_term_is_on_field($node->field_tags['und'], $tid['tid'])) {
      $node->field_tags['und'][] = $tid;
    }
  }
  return $node;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 * Add ajax callbacks to the opencalais fields
 */
function emh_opencalais_form_node_form_alter(&$form, &$form_state, $form_id) {
  
  $path_emh = drupal_get_path('module', 'emh_opencalais');
  drupal_add_js($path_emh.'/theme/emh_opencalais.js');
  
  $node = $form['#node'];
  $content_type = $node->type;
  $auto = variable_get('opencalais_autotagging', array());
  $mode = $auto[$content_type];
  
  if ($mode != 1 && isset($auto[$content_type])) {
    $path = drupal_get_path('module', 'opencalais');
    $form['field_tags']['emh_opencalais']['suggest_tags'] = array(
        '#type' => 'submit',
        '#value' => t('Suggest EMH Tags'),
        '#prefix' => '<div class="emh_opencalais_button_holder">Automatically add some tags : ',
        '#suffix' => '</div>',
        '#attributes' => array(
            'class' => array(
                'emh_opencalais_submit' 
            ) 
        ),
        '#weight' => - 20,
        // '#submit' => array('emh_opencalais_suggest_tags_submit'),
        '#ajax' => array(
            'callback' => 'emh_opencalais_suggest_tags_callback',
            'effect' => 'fade',
            'method' => 'replace' 
        ),
        '#attached' => array(
            'js' => array(
                $path . '/theme/opencalais.node.js' 
            ),
            'css' => array(
                $path_emh . '/theme/emh_opencalais.node.css' 
            ) 
        ) 
    );
  }
  
  $form['field_tags']['#prefix'] = '<div id="div-emh-opencalais-tags" width="20px">';
  $form['field_tags']['#suffix'] = '</div>';
  
  $form['opencalais_socialtags_tags']['#access'] = FALSE;
  
}

/**
 * AJAX Callback to get OpenCalais tag suggestions for an Entity.
 */
function emh_opencalais_suggest_tags_callback($form, &$form_state, $norebuild = FALSE) {
  $commands = array();
  $tags_generate = '<p> ';
  $tags = 'social_tags';
  
  $node = node_form_submit_build_node($form, $form_state);
  
  $suggestions = emh_opencalais_get_suggestions($node, $tags);
  $suggestions = array_keys($suggestions);
  
  $tags_array = array();
  $tags_node = $form_state['values']['field_tags']['und'];
  foreach ($tags_node as $key => $value) {
    $tags_array[] = $value['name'];
  }
  
  $tags_array = array_merge($tags_array, $suggestions);
  $tags_array = array_unique($tags_array);
  
  $value_field_tags = '';
  foreach ($tags_array as $key => $value) {
    
    $value_field_tags .= ' ""' . $value . '""';
  }
  
  $form['field_tags']['und']['value_field']['#default_value'] = $value_field_tags;
  $form['field_tags']['und']['value_field']['#value'] = $value_field_tags;
  
  $output = '<div id = "div-emh-opencalais-tags">' . render($form['field_tags']['und']);
  $output .= render($form['field_tags']['emh_opencalais']['suggest_tags']) . '</div>';
  
  $commands[] = ajax_command_replace('#div-emh-opencalais-tags', $output);
  $element = array(
      '#type' => 'ajax',
      '#commands' => $commands 
  );
  return $element;
}

/**
 * Implements hook_module_implements_alter().
 */
function emh_opencalais_module_implements_alter(&$implementations, $hook) {
  switch ($hook) {
    case 'form_node_form_alter':
      if (array_key_exists('opencalais', $implementations)) {       
        unset($implementations['opencalais']);        
      }
      break;
  }
}

