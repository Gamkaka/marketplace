<?php

/**
 * @file
 * Code of the eMindHub request submission flags feature.
 */

include_once 'emh_request_submission_flags.inc';

/**
 * Implements hook_theme().
 */
function emh_request_submission_flags_theme() {
  return array(
    'flag_description' => array(
      'template' => 'flag-description',
      'path' => drupal_get_path('module', 'emh_request_submission_flags') . '/theme',
      'variables' => array(
        'short' => NULL,
        'long' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function emh_request_submission_flags_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'emh_request_submission_flags') . '/views',
  );
}

/**
 * Implements hook_flag_access().
 */
function emh_request_submission_flags_flag_access($flag, $entity_id, $action, $account) {
  switch ($flag->name) {
    case 'interesting_answer':
    case 'comment_answer':
      module_load_include('inc', 'webform', 'includes/webform.submissions');
      $submissions = webform_get_submissions(array('sid' => $entity_id));
      $node = node_load($submissions[$entity_id]->nid);
      return $account->uid != $node->uid ? FALSE : NULL;
  }
}

/**
 * Implements hook_flag_access_multiple().
 */
function emh_request_submission_flags_flag_access_multiple($flag, $entity_ids, $account) {
  $access = array();

  switch ($flag->name) {
    case 'interesting_answer':
    case 'comment_answer':
      module_load_include('inc', 'webform', 'includes/webform.submissions');
      foreach ($entity_ids as $entity_id => $action) {
        $submissions = webform_get_submissions(array('sid' => $entity_id));
        $node = node_load($submissions[$entity_id]->nid);
        $access[$entity_id] = $node->uid != $account->uid ? FALSE : NULL;
      }
  }

  return $access;
}

/**
 * Implements hook_flag_javascript_info_alter().
 */
function emh_request_submission_flags_flag_javascript_info_alter(&$info, $flag) {
  if ($flag->name === 'interesting_answer') {
    $info['newLink'] = $flag->theme($flag->is_flagged($info['contentId']) ? 'unflag' : 'flag', $info['contentId'], array(
      'after_flagging' => FALSE,
      'errors' => $flag->get_errors(),
    ));
  }
}
