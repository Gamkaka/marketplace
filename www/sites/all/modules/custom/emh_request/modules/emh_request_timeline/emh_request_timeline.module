<?php

/**
 * Implements hook_theme().
 */
function emh_request_timeline_theme() {
  return array(
    'timeline' => array(
      'template' => 'timeline',
      'variables' => array(
        'class' => null,
        'created' => null,
        'deadline' => null,
        'progression' => null,
        'left' => null,
      ),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function emh_request_timeline_block_info() {
  $blocks['timeline'] = array(
    'info' => t("Request - Timeline"),
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'weight' => 1,
    'status' => 1,
    'region' => 'title',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'node/*',
    'node_types' => array(
      0 => 'request',
    ),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function emh_request_timeline_block_view($delta) {
  switch ($delta) {
    case 'timeline':
      $block = array(
        'subject' => '<none>',
        'content' => _emh_request_timeline_view(),
      );
      break;
  }
  return $block;
}

/**
 * Get Submission status & timeline.
 *
 * @param stdClass $request
 *  The request node
 * @return array
 */
function emh_request_timeline_get_timeline($request) {
  $timeline = array();

  $status = emh_request_get_status($request->nid);
  $status = $status['status'];

  $now = date('Y/m/d');
  $nowDate = new DateTime($now);

  $created = date('Y/m/d', $request->created);
  $createdDate = new DateTime($created);

  $deadline = field_get_items('node', $request, 'field_expiration_date');
  $deadlineDate = new DateTime($deadline[0]['value']);

  $intervalNow = $createdDate->diff($nowDate);
  $intervalNow = $intervalNow->format('%a day(s)');

  $intervalDeadline = $createdDate->diff($deadlineDate);
  $intervalDeadline = $intervalDeadline->format('%a day(s)');

  if ($status != 'closed') {
    $intervalLeft = $nowDate->diff($deadlineDate);
    $intervalLeft = $intervalLeft->format('%a day(s) left');
  } else {
    $intervalLeft = t('Closed');
  }

  $progression = round(($intervalNow / $intervalDeadline) * 100);

  $timeline = array(
    'status' => $status,
    'now' => $now,
    'created' => $created,
    'deadline' => $deadlineDate->format('Y/m/d'),
    'progression' => $progression,
    'left' => $intervalLeft,
    'soon' => ($progression >= 90),
  );

  return $timeline;
}

function _emh_request_timeline_view() {
  $request = menu_get_object();

  if (!$request || $request->status == NODE_NOT_PUBLISHED) {
    return;
  }

  $timeline = emh_request_timeline_get_timeline($request);

  if ($timeline['status'] == 'open') {
    $class = 'success';
  }
  elseif ($timeline['status'] == 'closed') {
    $class = 'inactive';
  }

  if ($timeline['soon'] === TRUE) {
    $class = 'warning';
  }

  return theme('timeline', array(
    'class' => $class,
    'created' => $timeline['created'],
    'deadline' => $timeline['deadline'],
    'progression' => $timeline['progression'],
    'left' => $timeline['left'],
  ));
}
