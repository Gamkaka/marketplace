<?php

/**
 * @file
 * Code for EMH Smart Mobility feature.
 */

define('EMH_SMARTMOBILITY_HOMEPAGE_ALIAS', 'smart-mobility');

include_once 'emh_smartmobility.inc';
include_once 'emh_smartmobility.block.inc';
include_once 'emh_smartmobility.pages.inc';

/**
 * Implements hook_boot().
 */
function emh_smartmobility_boot() {
  global $base_url;

  if ($base_url == variable_get('emh_smartmobility_base_url', 'http://smartmob.box.local')) {
    define('EMH_SMARTMOBILITY_BASE_URL', '');
  }
  else {
    define('EMH_SMARTMOBILITY_BASE_URL', EMH_SMARTMOBILITY_HOMEPAGE_ALIAS);
  }

  define('EMH_SMARTMOBILITY_REGISTER_CLIENT', EMH_SMARTMOBILITY_BASE_URL . '/client/register');
  define('EMH_SMARTMOBILITY_REGISTER_EXPERT', EMH_SMARTMOBILITY_BASE_URL . '/expert/register');
}

/**
 * Implements hook_theme().
 */
function emh_smartmobility_theme() {
  return array(
    'emh_smartmobility_page' => array(
      'template' => 'emh-smartmobility--page--front',
      'path' => drupal_get_path('module', 'emh_smartmobility') . '/theme',
    ),
    'emh_smartmobility_block_persona' => array(
      'template' => 'block--emh-smartmobility--persona',
      'path' => drupal_get_path('module', 'emh_smartmobility') . '/theme',
      'variables' => array(
        'title' => NULL,
        'content' => NULL,
      ),
    ),
    'emh_smartmobility_block_partners' => array(
      'template' => 'block--emh-smartmobility--partners',
      'path' => drupal_get_path('module', 'emh_smartmobility') . '/theme',
      'variables' => array(
        'title' => NULL,
        'content' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_custom_theme().
 */
function emh_smartmobility_custom_theme() {
  if (emh_smartmobility_context()) {
    return 'smartmobility';
  }
}

/**
 * Implements hook_menu().
 */
function emh_smartmobility_menu() {
  $items = array();

  $items[EMH_SMARTMOBILITY_HOMEPAGE_ALIAS] = array(
    'title' => 'Smart Mobility',
    'page callback' => 'emh_smartmobility_page',
    'access callback' => 'user_is_anonymous',
  );
  $items[EMH_SMARTMOBILITY_REGISTER_CLIENT] = array(
    'title' => 'Inscrivez-vous pour rechercher des talents',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_register_form_smartmobility_client'),
    'access arguments' => array('access content'),
  );
  $items[EMH_SMARTMOBILITY_REGISTER_EXPERT] = array(
    'title' => 'Inscrivez-vous en tant que salariÃ© Airbus',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_register_form_smartmobility_expert'),
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Implements hook_forms().
 */
function emh_smartmobility_forms($form_id, $args) {
  $forms = array();
  switch ($form_id) {
    case 'user_register_form_smartmobility_client':
      $forms['user_register_form_smartmobility_client'] = array(
        'callback' => 'user_register_form',
      );
      break;

    case 'user_register_form_smartmobility_expert':
      $forms['user_register_form_smartmobility_expert'] = array(
        'callback' => 'user_register_form',
      );
      break;
  }
  return $forms;
}

/**
 * Implements hook_form_alter().
 */
function emh_smartmobility_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'user_register_form_smartmobility_client':
    case 'user_register_form_smartmobility_expert':
      unset($form['#action']);
      $form['#submit'][] = 'emh_smartmobility_register_form_submit';
  }
}

/**
 * Submit callback for the user register form.
 */
function emh_smartmobility_register_form_submit($form, &$form_state) {
  global $base_url;
  $form_state['redirect'] = url(EMH_SMARTMOBILITY_BASE_URL, array('base_url' => $base_url, 'absolute' => TRUE, 'language' => (object) array('language' => FALSE)));
}

/**
 * Implements hook_user_presave().
 */
function emh_smartmobility_user_presave(&$edit, $account, $category) {
  if (emh_smartmobility_context()) {
    if (isset($account->is_new) && !empty($account->is_new)) {
      // Automatically assign user to particular roles.
      $roleswitcher_role = user_role_load_by_name('roleswitcher');
      if (current_path() == EMH_SMARTMOBILITY_REGISTER_CLIENT) {
        $role = user_role_load_by_name('business');
        $edit['roles'] = array($role->rid => 1, $roleswitcher_role->rid => 1);
      }
      if (current_path() == EMH_SMARTMOBILITY_REGISTER_EXPERT) {
        $role = user_role_load_by_name('expert');
        $edit['roles'] = array($role->rid => 1, $roleswitcher_role->rid => 1);
      }
    }
  }
}

/**
 * Implements hook_user_insert().
 */
function emh_smartmobility_user_insert(&$edit, $account, $category) {
  if (emh_smartmobility_context()) {
    // Automatically assign user to a particular group.
    $values = array(
      'entity_type' => 'user',
      'entity' => $account,
      'state' => OG_STATE_ACTIVE,
    );
    og_group('node', variable_get('emh_smartmobility_circle_gid', 1813), $values);
  }
}
