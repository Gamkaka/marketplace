<?php


/*
 * @file
 * Module de test pour afficher des requetes.
 */

/*
 * Implementation of hook_menu()
 */
function test_menu() {
	$items['test'] = array(
			'title' => 'Test Drupal',
			'access arguments' => array(true),
			'type' => MENU_CALLBACK,
			'page callback' => 'test_content',
	);	
	
	$items['test/addUser'] = array(
			'title' => 'Ajouter un utilisateur',
			'access arguments' => array(true),
			'type' => MENU_CALLBACK,
			'page callback' => 'test_myform'
	);
	
	$items['test2'] = array(
			'title' => 'Test Drupal',
			'access callback' => TRUE,
			'type' => MENU_CALLBACK,
			'page callback' => 'test_content_2'
	);	
	
	return $items;
}



function test_content_2() {
	$user = user_load(arg(1)/*4426*/, TRUE);
	var_dump($user->field_linkedin_image);
	//$image1 = "https://media.licdn.com/mpr/mprx/0_1DoasTnn0njCb3Mjxyyiq9ZBxkTiGhoDKdy8pqsng1oCGrNr1dY8tPZn4toiGT6AnR-aZ-B911hGTX_uJYf-tvnVn1h_TXrj0YfDMN_cg-zfw-ITPfM_JhS69QVPHXb2njwGOQBKRNV";
	//$image2 = "https://media.licdn.com/mpr/mprx/0_r7IZBBfXoGXSouRpKuHIBqgbeC_jEERp-e0FBzDZBXBDva2yyWRNJvMnQ7iGdSVrAudQZt16rBlZ";
	
/*$md5image1 = md5(file_get_contents($image1));
$md5image2 = md5(file_get_contents($image2));
if ($md5image1 == $md5image2) {
  echo "c'est la même";
} else {
  echo "pas la même";
}*//*
	$handle = fopen($image1, 'r');     
	$drupal_uri = "public://linkedin_profile_image/test.jpg";
  $file = file_save_data($handle, $drupal_uri);
  fclose($hanle);
	
	//user_save($user);
	//ddl($user);
	kpr($user);*/
	/*
	$query = new EntityFieldQuery();
	$query->entityCondition('entity_type', 'node')
	->entityCondition('bundle', 'corporate')
	->propertyCondition('title', '1112 carambolage' , 'like');
	
	$result = $query->execute();
	$company = array_shift($result['node']);
	kpr($company);
	if (isset($result['node'])) {
		$news_items_nids = array_keys($result['node']);
		$news_items = entity_load('node', $news_items_nids);
		kpr($news_items);
	} */
	
	
	
	/*$node = new stdClass();
	$node->title = "Les Exploits T";
	$node->type = "corporate";
	node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
	$node->language = 'und'; // Or e.g. 'en' if locale is enabled
	$node->uid = $user->uid;
	$node->status = 1; //(1 or 0): published or not
	$node->promote = 1; //(1 or 0): promoted to front page
	$node->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write	
	
	
	$node = node_submit($node); // Prepare node for saving
	node_save($node);
	
	kpr($node);*/
	
	//kpr(entity_get_info());
	//echo "user : $user->uid <br>";
	//kpr($user);
	
	
	module_load_include('inc', 'emh_linkedin', 'emh_linkedin');
	$fields = _emh_linkedin_fields_build_profile();
	$profile = emh_linkedin_get_profile_fields($user->uid, $fields);
	
	
	kpr($profile);
	/*foreach ($profile as $key => $value) {
		$item = array(
				'name' => $key,
				'value' => $value,
		);
		$user = _emh_linkedin_fields_to_user_fields($item,$user);
		//var_dump($item);
		
		
	}*/
	//kpr($user);
	/*echo 'field_address';
	kpr($user->field_address);
	
	echo 'field_nb_contacts_linkedin';
	kpr($user->field_nb_contacts_linkedin);
	
	echo 'field_employment_history';
	kpr($user->field_employment_history);
		
	echo 'field_position';
	kpr($user->field_position);
	
	echo 'field_entreprise';
	kpr($user->field_entreprise);
	
	echo 'field_description_activities';
	kpr($user->field_description_activities);
	
	echo 'field_linkedin_image';
	kpr($user->field_linkedin_image);
	
	echo 'field_linkedin';
	kpr($user->field_linkedin);
	
	echo 'field_titre_metier';
	kpr($user->field_titre_metier);*/
	
	
	
}



function test_content() {
	
	/*$time_start = microtime(true);
	$user = user_load(4413);
	//var_dump($user);
	$path = $user->name . "_1234.jpg";
	//var_dump(file_build_uri($path));
	
	
	
	$url="https://media.licdn.com/mpr/mprx/0_0eo-q-CnPPwiXTy_Ke-pxhUn1-Qxb8C7JurytbDnKlFOGrGize--yqfnvPUuXKGizeYPvrh90qHYTXwjnRfap63VsqH0TXQ7zRfAcFqclzjPw-g1MEMxBPV6VT-fHXAYyZwOKJMfE7u";
	$fp = fopen($path, 'w');
	
	$ch = curl_init($url);
	curl_setopt($ch, CURLOPT_FILE, $fp);
	$data = curl_exec($ch);
	$curl_errno = curl_errno($ch);
	$curl_error = curl_error($ch);
	curl_close($ch);
	fclose($fp);
	
	
	if ($curl_errno > 0) {
		echo "cURL Error ($curl_errno): $curl_error\n";
	} else {
		echo "Data received: $data\n";
	}
	
	$handle = fopen($path, 'r');
	$file = file_save_data($handle,file_build_uri($path));
	fclose($handle);
	var_dump($file);
	
	$time_end = microtime(true);
	
	$time = $time_end - $time_start;
	
	echo 'exec image : ' . $time;
	
	
	$time_start = microtime(true);
	$user = user_load(4413);
	$drupal_uri = "public://linkedin_profile_image/test.jpg";
	$handle2 = fopen('https://upload.wikimedia.org/wikipedia/en/1/17/Batman-BenAffleck.jpg', 'r');
	$file = file_save_data($handle2, $drupal_uri);
	var_dump($file);
	
	$time_end = microtime(true);
	
	$time = $time_end - $time_start;
	
	echo 'exec image 2 : ' . $time;
	
	
	/*$file= file_load(1163);
	var_dump($file->fid);*/
	
	/*$edit = array(
		'field_photo' => array(
			'und' => array(
				0 => array(
					'cropbox_x' => '45'
				),
			),
		),
	);
	
	user_save($user,$edit);

	$user = user_load(4418);
	var_dump($user->field_photo);
	/*
	 * 
	 * ************************************
	 * $path = "mon-fichier2.jpg";
	//var_dump(file_build_uri($path));
	
	
	
	$url="https://media.licdn.com/mpr/mprx/0_0eo-q-CnPPwiXTy_Ke-pxhUn1-Qxb8C7JurytbDnKlFOGrGize--yqfnvPUuXKGizeYPvrh90qHYTXwjnRfap63VsqH0TXQ7zRfAcFqclzjPw-g1MEMxBPV6VT-fHXAYyZwOKJMfE7u";
	$fp = fopen($path, 'w');
	
	$ch = curl_init($url);
	curl_setopt($ch, CURLOPT_FILE, $fp);
	$data = curl_exec($ch);
	$curl_errno = curl_errno($ch);
	$curl_error = curl_error($ch);
	curl_close($ch);
	fclose($fp);
	
	
	if ($curl_errno > 0) {
		echo "cURL Error ($curl_errno): $curl_error\n";
	} else {
		echo "Data received: $data\n";
	}
	
	$handle = fopen($path, 'r');
	$file = file_save_data($handle,file_build_uri($path));
	******************************************************************
	image_resize($file, 20, 20);
	image_save($file, file_build_uri($path));
	var_dump($file);*/
	
	$output = 'coucou';
	//file_display_new($file_type, $view_mode, $formatter_name)
	/*$path = "mon-fichier2.jpg";
	*/
	
	/*$uid = 4418;
	
	$identity = db_select('hybridauth_identity', 'ha_id')
	->fields('ha_id')
	->condition('uid', $uid, '=')
	->execute()
	->fetchAssoc();
	
	var_dump(unserialize($identity['data']));*/
	/*
	
	$uid = 4418;
	
	$identity = db_select('hybridauth_identity', 'ha_id')
	->fields('ha_id')
	->condition('uid', $uid, '=')
	->execute()
	->fetchAssoc();
	//$authname = $identity['provider_identity'];
	//$identity = _hybridauth_identity_load_by_uid(4413);
	var_dump($identity['data']);
	echo '<br/>isset : ' . print_r(isset($identity['data']),true);
	echo '<br/>empty : ' . empty($identity['data']) . '<br/>';
	
	//on regarde si l'utilisateur � d�j� utilis� la connection via linkedin (module hybridauth)
	if(isset($identity['data'])) {
		$linkedin_profile = $identity['data'];
		$linkedin_profile = unserialize($linkedin_profile);
	
		if(isset($linkedin_profile['profileURL'])) {
			$profileURL = $linkedin_profile['profileURL'];
				
			//echo $profileURL . '</br>';
				
			//test si l'utilisateur � d�ja le lien de son compte linkedin dans son profile
			$select = db_select('field_data_field_linkedin', 'f');
			$field_linkedin = $select->fields('f')
				->condition('entity_id',$uid, '=')
				->execute()
				->fetchAssoc();
			
			echo 'before<br/>';
			var_dump($field_linkedin);
			echo 'after<br/>';
				
			if(empty($field_linkedin)) {
				echo "J'ajoute mon gars";
				//on ajoute dans le profile utilisateur le lien du profile linkedin
				$insert = db_insert('field_data_field_linkedin');
				$insert->fields(array(
						'entity_type' => 'user',
						'bundle' => 'user',
						'deleted' => 0,
						'entity_id' => $uid,
						'revision_id' => $uid,
						'language' => 'und',
						'delta' => 0,
						'field_linkedin_url' => $profileURL,
						'field_linkedin_attributes' => 'a:0:{}'
				));
				$insert->execute();
	
			}
			else {
				echo 'Je vais la';
				//maj de l'adresse
				if(strcmp($field_linkedin['field_linkedin_url'], $profileURL) != 0) {
					echo '<br/>je maj';
					$update = db_update('field_data_field_linkedin');
					$update->fields(array(
							'field_linkedin_url' => $profileURL
					))
					->condition('entity_id', $uid)
					->execute();
				}
			}
		}
	}
	else {
		echo "T'as rien mon gars";
	}
	*/
	
	return $output;
	
}


